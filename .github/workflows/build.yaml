name: Build

on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  setup:
    name: Set up
    runs-on: ubuntu-22.04
    outputs:
      VERSION: ${{ steps.setup.outputs.VERSION }}
      DOING_RELEASE: ${{ steps.setup.outputs.DOING_RELEASE }}
    steps:
      - name: Set up env vars
        id: setup
        shell: bash
        run: |
          VERSION=${GITHUB_REF/refs\/tags\//}
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          DOING_RELEASE=$(echo $VERSION | grep -c '^[0-9]\+\.[0-9]\+\.[0-9]\+\(-\([a-zA-Z]\+\)\?[0-9]*\)\?$' || true)
          echo "DOING_RELEASE=${DOING_RELEASE}" >> $GITHUB_OUTPUT
          echo $VERSION
          echo $DOING_RELEASE

  build:
    name: Build on ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux-x64
            os: ubuntu-22.04
          - build: macos-x64
            os: macos-11
          - build: windows-x64
            os: windows-2019
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.84
      - name: build
        run: cargo run --release --example simple
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            target/release/examples/tesseract/libleptonica.dylib
            target/release/examples/tesseract/libtesseract.dylib
            target/release/examples/tesseract/libleptonica.so
            target/release/examples/tesseract/libtesseract.so
            target/release/examples/tesseract/libleptonica.dll
            target/release/examples/tesseract/libtesseract.dll